diff --git a/toolchain/cc_toolchain_config.bzl b/toolchain/cc_toolchain_config.bzl
index 7bb55f3..d2286f5 100644
--- a/toolchain/cc_toolchain_config.bzl
+++ b/toolchain/cc_toolchain_config.bzl
@@ -122,9 +122,19 @@ def cc_toolchain_config(
     ]
 
     is_xcompile = not (exec_os == target_os and exec_arch == target_arch)
+    sysroot_path = compiler_configuration["sysroot_path"]
+
+    # Clang is precompiled with hardcoded include paths, if there's no sysroot_path,
+    # we need to add them manually.
+    print("HELLO SYSROOT PATH", sysroot_path)
+    nix_include =  [
+        "-idirafter",
+        "@glibcDevPath@/include",
+        @extraIncludes@
+    ] if sysroot_path == "" else []
 
     # Default compiler flags:
-    compile_flags = [
+    compile_flags = nix_include + [
         "--target=" + target_system_name,
         # Security
         "-U_FORTIFY_SOURCE",  # https://github.com/google/sanitizers/issues/247
@@ -201,6 +211,7 @@ def cc_toolchain_config(
             "-Wl,--build-id=md5",
             "-Wl,--hash-style=gnu",
             "-Wl,-z,relro,-z,now",
+            "-Wl,-no-pie",
         ])
         use_libtool = False
 
@@ -208,7 +219,6 @@ def cc_toolchain_config(
     # The linker has no way of knowing if there are C++ objects; so we
     # always link C++ libraries.
     cxx_standard = compiler_configuration["cxx_standard"]
-    sysroot_path = compiler_configuration["sysroot_path"]
     if stdlib == "builtin-libc++" and is_xcompile:
         stdlib = "stdc++"
     if stdlib == "builtin-libc++":
@@ -246,8 +256,9 @@ def cc_toolchain_config(
             # not static linked from the toolchain, so explicitly have the
             # sysroot directory on the search path and then add the toolchain
             # directory back after we are done.
+            lib_path = "{}/usr/lib".format(sysroot_path) if sysroot_path != "" else "@stdenvPath@/lib"
             link_flags.extend([
-                "-L{}/usr/lib".format(sysroot_path),
+                "-L{}".format(lib_path),
                 "-lc++",
                 "-lc++abi",
                 "-Bdynamic",
@@ -291,6 +302,14 @@ def cc_toolchain_config(
     else:
         fail("Unknown value passed for stdlib: {stdlib}".format(stdlib = stdlib))
 
+    if sysroot_path == "":
+        link_flags.extend([
+            "-B@glibcPath@/lib",
+            "-L@glibcPath@/lib",
+        ])
+
+    cxx_flags.extend([])
+
     opt_link_flags = ["-Wl,--gc-sections"] if target_os == "linux" else []
 
     # Coverage flags:
diff --git a/toolchain/internal/common.bzl b/toolchain/internal/common.bzl
index fe56b6a..63db9a4 100644
--- a/toolchain/internal/common.bzl
+++ b/toolchain/internal/common.bzl
@@ -70,6 +70,7 @@ _known_distros = [
     "rhel",
     "ol",
     "almalinux",
+    "nixos",
 ]
 
 def _linux_dist(rctx):
diff --git a/toolchain/internal/configure.bzl b/toolchain/internal/configure.bzl
index 37a0ab6..26b52ad 100644
--- a/toolchain/internal/configure.bzl
+++ b/toolchain/internal/configure.bzl
@@ -337,11 +337,20 @@ def _cc_toolchain_str(
     if sysroot_path:
         sysroot_prefix = "%sysroot%"
     if target_os == "linux":
-        cxx_builtin_include_directories.extend([
-            _join(sysroot_prefix, "/include"),
-            _join(sysroot_prefix, "/usr/include"),
-            _join(sysroot_prefix, "/usr/local/include"),
-        ])
+        if sysroot_path == "":
+            cxx_builtin_include_directories.extend([
+                # Nix system libs. These are not embedded in the clang binary.
+                "@glibcDevPath@/include",
+                "@linuxHeadersPath@/include",
+                "@stdenvDevPath@/include",
+                @extraIncludes@
+            ])
+        else:
+            cxx_builtin_include_directories.extend([
+                _join(sysroot_prefix, "/include"),
+                _join(sysroot_prefix, "/usr/include"),
+                _join(sysroot_prefix, "/usr/local/include"),
+            ])
     elif target_os == "darwin":
         cxx_builtin_include_directories.extend([
             _join(sysroot_prefix, "/usr/include"),
diff --git a/toolchain/internal/release_name.bzl b/toolchain/internal/release_name.bzl
index a390a48..0cf8d0c 100755
--- a/toolchain/internal/release_name.bzl
+++ b/toolchain/internal/release_name.bzl
@@ -187,6 +187,8 @@ def _linux(llvm_version, distname, version, arch):
         os_name = "linux-gnueabihf"
     elif distname in ["rhel", "ol", "almalinux"]:
         os_name = _rhel_osname(arch, version, major_llvm_version, llvm_version)
+    elif distname == "nixos":
+        os_name = _ubuntu_osname(arch, version, major_llvm_version, llvm_version)
 
     if not os_name:
         fail("Unsupported linux distribution and version: %s, %s" % (distname, version))
